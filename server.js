// server.js (ุงูููุฏ ุงูููุงุฆู ุงูุฐู ูุถูู ุงุณุชูุฑุงุฑ ุงูุฎุงุฏู ุนูู Railway)
require('dotenv').config(); 
const express = require('express');
const cors = require('cors');
const helmet = require('helmet');
const jwt = require('jsonwebtoken'); 
const boardController = require('./boardController'); 
// ๐จ ูู ูุนุฏ ูุณุชุฎุฏู authenticateToken (ููุชุจุณูุท)
require('./db'); // ูุญุชูู ุนูู ุชููุฆุฉ ุงุชุตุงู PostgreSQL

const app = express();

// ๐จ ุงูุชุตุญูุญ ุงูุญุงุณู: ุงุณุชุฎุฏุงู ุงููููุฐ ุงูุฐู ูุญุฏุฏู Railway ุจุงููุงูู
const PORT = process.env.PORT; 

// ----------------------------------------------------
// 1. ุงูุฃูุงู ูุงูู MIDDLEWARES
// ----------------------------------------------------
app.use(helmet()); 

// ูุงุฆูุฉ ุงูุนูุงููู ุงููุณููุญ ุจูุง (ูุญู CORS)
const allowedOrigins = [
    'https://ieee-al-azhar-university.web.app', 
    'https://ieee-al-azhar-university.firebaseapp.com',
    'http://localhost:5173' 
];

const corsOptions = {
    origin: (origin, callback) => {
        if (allowedOrigins.includes(origin) || !origin) {
            callback(null, true);
        } else {
            callback(new Error('Not allowed by CORS policy. Origin rejected.'), false);
        }
    },
    methods: ['GET', 'POST', 'OPTIONS'], 
    allowedHeaders: ['Content-Type', 'Authorization'], 
    optionsSuccessStatus: 200,
};

app.use(cors(corsOptions)); 
app.use(express.json()); // ูุชุญููู JSON


// ----------------------------------------------------
// 2. ูุณุงุฑุงุช ุงููุตุงุฏูุฉ (Auth ู Refresh) - ููุนุทูุฉ ุญุงููุงู
// ----------------------------------------------------
app.post('/api/auth', (req, res) => {
    res.status(503).json({ message: "Authentication is temporarily disabled." }); 
});
app.post('/api/refresh', (req, res) => {
    res.status(503).json({ message: "Authentication is temporarily disabled." });
});


// ----------------------------------------------------
// 3. ูุณุงุฑุงุช ุงูู API ุงูุนุงูุฉ (ุจุฏูู ุญูุงูุฉ)
// ----------------------------------------------------

// 1. ูุณุงุฑ ุฌูุจ ุฌููุน ุงููุฌุงูุณ (ุนุงู)
app.get('/api/board', async (req, res) => { 
    try {
        const data = await boardController.getBoardData();
        res.json(data);
    } catch (err) {
        console.error("Error in /api/board:", err.message);
        res.status(500).json({ message: "Internal server error while fetching board data." });
    }
});

// 2. ูุณุงุฑ ุฌูุจ ุงูุฑุฆูุณ ุงูุณุงุจู (ุนุงู)
app.get('/api/last-chairman', async (req, res) => { 
    try {
        const data = await boardController.getLastChairman();
        res.json(data);
    } catch (err) {
        console.error("Error in /api/last-chairman:", err.message);
        res.status(500).json({ message: "Internal server error while fetching last chairman data." });
    }
});


// ----------------------------------------------------
// 4. ูุนุงูุฌุฉ ุงูุฃุฎุทุงุก (404) ูู ุงูููุงูุฉ
// ----------------------------------------------------
app.use((req, res, next) => {
    res.status(404).json({ message: "Endpoint not found." });
});


// ----------------------------------------------------
// ุจุฏุก ุชุดุบูู ุงูุฎุงุฏู
// ----------------------------------------------------
app.listen(PORT, '0.0.0.0', () => { // ๐จ ุงุณุชุฎุฏุงู '0.0.0.0' ูุญู ูุดููุฉ ุงูุงุณุชูุงุน ูู ุจูุฆุงุช Docker/Railway
    console.log(`โ API Server running on port ${PORT}`);
});